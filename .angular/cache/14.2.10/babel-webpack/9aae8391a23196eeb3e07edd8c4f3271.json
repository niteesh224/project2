{"ast":null,"code":"import _classCallCheck from \"C:/Users/nitee/project2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/nitee/project2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { EventEmitter, Component, SkipSelf, Input, Output, NgModule } from '@angular/core';\nimport { HttpEventType, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\nfunction AngularFileUploaderComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"drop\", function AngularFileUploaderComponent_div_0_div_1_Template_div_drop_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r12.drop($event));\n    })(\"dragover\", function AngularFileUploaderComponent_div_0_div_1_Template_div_dragover_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r14.allowDrop($event));\n    });\n    ɵngcc0.ɵɵelementStart(3, \"p\", 16);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.hideSelectBtn && ctx_r2.hideResetBtn ? null : \"dragNDropBtmPad\");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.replaceTexts == null ? null : ctx_r2.replaceTexts.dragNDropBox);\n  }\n}\nfunction AngularFileUploaderComponent_div_0_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 17);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"for\", \"sel\", ctx_r3.id, \"\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.progressBarShow ? \"disabled\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.replaceTexts == null ? null : ctx_r3.replaceTexts.selectFileBtn);\n  }\n}\nfunction AngularFileUploaderComponent_div_0_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_0_input_3_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r15.onChange($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r4.id, \"\");\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r4.progressBarShow)(\"accept\", ctx_r4.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r4.multiple ? \"\" : null);\n  }\n}\nfunction AngularFileUploaderComponent_div_0_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_button_4_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r17.resetFileUpload());\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r5.progressBarShow);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.replaceTexts == null ? null : ctx_r5.replaceTexts.resetBtn);\n  }\n}\nfunction AngularFileUploaderComponent_div_0_br_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"br\");\n  }\n}\nvar _c0 = function _c0(a0) {\n  return {\n    \"width\": a0\n  };\n};\nfunction AngularFileUploaderComponent_div_0_div_8_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 26)(1, \"span\", 27);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r21.uploadPercent + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r21.uploadPercent, \"%\");\n  }\n}\nfunction AngularFileUploaderComponent_div_0_div_8_a_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 28);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_8_a_9_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var i_r20 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r23.removeFile(i_r20, \"sf\"));\n    });\n    ɵngcc0.ɵɵelement(1, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction AngularFileUploaderComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20)(1, \"p\", 21)(2, \"span\", 22);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23)(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\xA0\\xA0\\xA0\\xA0\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_div_8_Template, 3, 4, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_8_a_9_Template, 2, 0, \"a\", 25);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var sf_r19 = ctx.$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(sf_r19.name);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r7.convertSize(sf_r19.size), \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.isAllowedFileSingle && ctx_r7.progressBarShow && !ctx_r7.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.uploadStarted);\n  }\n}\nfunction AngularFileUploaderComponent_div_0_div_9_a_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r31 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 33);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_9_a_9_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var j_r27 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r29.removeFile(j_r27, \"na\"));\n    });\n    ɵngcc0.ɵɵtext(1, \"\\xA0\");\n    ɵngcc0.ɵɵelement(2, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction AngularFileUploaderComponent_div_0_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 21)(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23)(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementStart(7, \"p\", 31);\n    ɵngcc0.ɵɵtext(8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_a_9_Template, 3, 0, \"a\", 32);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var na_r26 = ctx.$implicit;\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(na_r26[\"fileName\"]);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", na_r26[\"fileSize\"], \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(na_r26[\"errorMsg\"]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r8.uploadStarted);\n  }\n}\nfunction AngularFileUploaderComponent_div_0_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"\", ctx_r9.uploadMsgClass, \" + afu-upload-status\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r9.uploadMsgText, \" \");\n  }\n}\nfunction AngularFileUploaderComponent_div_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\")(1, \"div\", 34)(2, \"span\", 27);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelement(4, \"br\")(5, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r10.uploadPercent + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r10.uploadPercent, \"%\");\n  }\n}\nfunction AngularFileUploaderComponent_div_0_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r33 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 35);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_button_13_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      var ctx_r32 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r32.uploadFiles());\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r11.enableUploadBtn && ctx_r11.progressBarShow);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11.replaceTexts == null ? null : ctx_r11.replaceTexts.uploadBtn);\n  }\n}\nfunction AngularFileUploaderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_0_div_1_Template, 5, 2, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, AngularFileUploaderComponent_div_0_label_2_Template, 2, 3, \"label\", 4);\n    ɵngcc0.ɵɵtemplate(3, AngularFileUploaderComponent_div_0_input_3_Template, 1, 4, \"input\", 5);\n    ɵngcc0.ɵɵtemplate(4, AngularFileUploaderComponent_div_0_button_4_Template, 2, 2, \"button\", 6);\n    ɵngcc0.ɵɵtemplate(5, AngularFileUploaderComponent_div_0_br_5_Template, 1, 0, \"br\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"p\", 8);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_Template, 10, 4, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_Template, 10, 4, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(10, AngularFileUploaderComponent_div_0_p_10_Template, 2, 4, \"p\", 11);\n    ɵngcc0.ɵɵelement(11, \"p\");\n    ɵngcc0.ɵɵtemplate(12, AngularFileUploaderComponent_div_0_div_12_Template, 6, 4, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(13, AngularFileUploaderComponent_div_0_button_13_Template, 2, 2, \"button\", 12);\n    ɵngcc0.ɵɵelement(14, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.theme == \"dragNDrop\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideResetBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate3(\"\", ctx_r0.formatsAllowedText, \" \", ctx_r0.replaceTexts == null ? null : ctx_r0.replaceTexts.sizeLimit, \": \", ctx_r0.convertSize(ctx_r0.maxSize), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.allowedFiles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.notAllowedFiles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.uploadMsg);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isAllowedFileSingle && ctx_r0.progressBarShow && !ctx_r0.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.autoUpload);\n  }\n}\nfunction AngularFileUploaderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r35 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"a\", 38);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_1_Template_a_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var ctx_r34 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r34.attachpinOnclick());\n    });\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelement(4, \"i\", 39);\n    ɵngcc0.ɵɵelementStart(5, \"input\", 40);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_1_Template_input_change_5_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r35);\n      var ctx_r36 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r36.onChange($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \" \\xA0 \");\n    ɵngcc0.ɵɵelementStart(8, \"span\", 41);\n    ɵngcc0.ɵɵtext(9);\n    ɵngcc0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.replaceTexts == null ? null : ctx_r1.replaceTexts.attachPinBtn, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r1.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r1.multiple ? \"\" : null);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"upload-file-info\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.allowedFiles[0] == null ? null : ctx_r1.allowedFiles[0].name);\n  }\n}\nvar AngularFileUploaderComponent = /*#__PURE__*/(function () {\n  var AngularFileUploaderComponent = /*#__PURE__*/function () {\n    function AngularFileUploaderComponent(http) {\n      _classCallCheck(this, AngularFileUploaderComponent);\n      this.http = http;\n      this.resetUpload = false;\n      // Outputs\n      this.ApiResponse = new EventEmitter();\n      this.fileSelected = new EventEmitter();\n      this.allowedFiles = [];\n      this.notAllowedFiles = [];\n      this.Caption = [];\n      this.isAllowedFileSingle = true;\n      this.progressBarShow = false;\n      this.enableUploadBtn = false;\n      this.uploadMsg = false;\n      this.afterUpload = false;\n      this.uploadStarted = false;\n      this.currentUploads = [];\n      this.fileNameIndex = true;\n      this.withCredentials = false;\n      this.autoUpload = false;\n      this.idDate = +new Date();\n    }\n    _createClass(AngularFileUploaderComponent, [{\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        // Track changes in Configuration and see if user has even provided Configuration.\n        if (changes.config && this.config) {\n          // Assign User Configurations to Library Properties.\n          this.theme = this.config.theme || '';\n          this.id = this.config.id || parseInt((this.idDate / 10000).toString().split('.')[1], 10) + Math.floor(Math.random() * 20) * 10000;\n          this.hideProgressBar = this.config.hideProgressBar || false;\n          this.hideResetBtn = this.config.hideResetBtn || false;\n          this.hideSelectBtn = this.config.hideSelectBtn || false;\n          this.maxSize = (this.config.maxSize || 20) * 1024000; // mb to bytes.\n          this.uploadAPI = this.config.uploadAPI.url;\n          this.method = this.config.uploadAPI.method || 'POST';\n          this.formatsAllowed = this.config.formatsAllowed || '*';\n          this.formatsAllowedText = this.formatsAllowed === '*' ? '' : '(' + this.formatsAllowed + ')';\n          this.multiple = this.config.multiple || false;\n          this.headers = this.config.uploadAPI.headers || {};\n          this.params = this.config.uploadAPI.params || {};\n          this.responseType = this.config.uploadAPI.responseType || 'json';\n          this.withCredentials = this.config.uploadAPI.withCredentials || false;\n          this.fileNameIndex = this.config.fileNameIndex === false ? false : true;\n          this.autoUpload = this.config.autoUpload || false;\n          this.replaceTexts = {\n            selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\n            resetBtn: 'Reset',\n            uploadBtn: 'Upload',\n            dragNDropBox: 'Drag N Drop',\n            attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\n            afterUploadMsg_success: 'Successfully Uploaded !',\n            afterUploadMsg_error: 'Upload Failed !',\n            sizeLimit: 'Size Limit'\n          }; // default replaceText.\n          if (this.config.replaceTexts) {\n            // updated replaceText if user has provided any.\n            this.replaceTexts = Object.assign(Object.assign({}, this.replaceTexts), this.config.replaceTexts);\n          }\n        }\n        // Reset when resetUpload value changes from false to true.\n        if (changes.resetUpload) {\n          if (changes.resetUpload.currentValue === true) {\n            this.resetFileUpload();\n          }\n        }\n      }\n      // Reset following properties.\n    }, {\n      key: \"resetFileUpload\",\n      value: function resetFileUpload() {\n        this.allowedFiles = [];\n        this.Caption = [];\n        this.notAllowedFiles = [];\n        this.uploadMsg = false;\n        this.enableUploadBtn = false;\n      }\n      // When user selects files.\n    }, {\n      key: \"onChange\",\n      value: function onChange(event) {\n        this.fileSelected.emit(event);\n        this.notAllowedFiles = [];\n        var fileExtRegExp = /(?:\\.([^.]+))?$/;\n        var fileList;\n        if (this.afterUpload || !this.multiple) {\n          this.allowedFiles = [];\n          this.Caption = [];\n          this.afterUpload = false;\n        }\n        if (event.type === 'drop') {\n          fileList = event.dataTransfer.files;\n        } else {\n          fileList = event.target.files || event.srcElement.files;\n        }\n        // 'forEach' does not exist on 'filelist' that's why this good old 'for' is used.\n        for (var i = 0; i < fileList.length; i++) {\n          var currentFileExt = fileExtRegExp.exec(fileList[i].name)[1].toLowerCase(); // Get file extension.\n          var isFormatValid = this.formatsAllowed.includes('*') ? true : this.formatsAllowed.includes(currentFileExt);\n          var isSizeValid = fileList[i].size <= this.maxSize;\n          // Check whether current file format and size is correct as specified in the configurations.\n          if (isFormatValid && isSizeValid) {\n            this.allowedFiles.push(fileList[i]);\n          } else {\n            this.notAllowedFiles.push({\n              fileName: fileList[i].name,\n              fileSize: this.convertSize(fileList[i].size),\n              errorMsg: !isFormatValid ? 'Invalid format' : 'Invalid size'\n            });\n          }\n        }\n        // If there's any allowedFiles.\n        if (this.allowedFiles.length > 0) {\n          this.enableUploadBtn = true;\n          // Upload the files directly if theme is attach pin (as upload btn is not there for this theme) or autoUpload is true.\n          if (this.theme === 'attachPin' || this.autoUpload) {\n            this.uploadFiles();\n          }\n        } else {\n          this.enableUploadBtn = false;\n        }\n        this.uploadMsg = false;\n        this.uploadStarted = false;\n        this.uploadPercent = 0;\n        event.target.value = null;\n      }\n    }, {\n      key: \"uploadFiles\",\n      value: function uploadFiles() {\n        var _this = this;\n        this.progressBarShow = true;\n        this.uploadStarted = true;\n        this.notAllowedFiles = [];\n        var isError = false;\n        this.isAllowedFileSingle = this.allowedFiles.length <= 1;\n        var formData = new FormData();\n        // Add data to be sent in this request\n        this.allowedFiles.forEach(function (file, i) {\n          formData.append(_this.Caption[i] || 'file' + (_this.fileNameIndex ? i : ''), _this.allowedFiles[i]);\n        });\n        /*\r\n        Not Working, Headers null\r\n        // Contruct Headers\r\n        const headers = new HttpHeaders();\r\n        for (const key of Object.keys(this.headers)) {\r\n          headers.append(key, this.headers[key]);\r\n        }\r\n              // Contruct Params\r\n        const params = new HttpParams();\r\n        for (const key of Object.keys(this.params)) {\r\n          params.append(key, this.params[key]);\r\n        } */\n        this.http.request(this.method.toUpperCase(), this.uploadAPI, {\n          body: formData,\n          reportProgress: true,\n          observe: 'events',\n          headers: this.headers,\n          params: this.params,\n          responseType: this.responseType,\n          withCredentials: this.withCredentials\n        }).subscribe(function (event) {\n          // Upload Progress\n          if (event.type === HttpEventType.UploadProgress) {\n            _this.enableUploadBtn = false; // button should be disabled if process uploading\n            var currentDone = event.loaded / event.total;\n            _this.uploadPercent = Math.round(event.loaded / event.total * 100);\n          } else if (event.type === HttpEventType.Response) {\n            if (event.status === 200 || event.status === 201) {\n              // Success\n              _this.progressBarShow = false;\n              _this.enableUploadBtn = false;\n              _this.uploadMsg = true;\n              _this.afterUpload = true;\n              if (!isError) {\n                _this.uploadMsgText = _this.replaceTexts.afterUploadMsg_success;\n                _this.uploadMsgClass = 'text-success lead';\n              }\n            } else {\n              // Failure\n              isError = true;\n              _this.handleErrors();\n            }\n            _this.ApiResponse.emit(event);\n          } else {\n            //console.log('Event Other: ', event);\n          }\n        }, function (error) {\n          // Failure\n          isError = true;\n          _this.handleErrors();\n          _this.ApiResponse.emit(error);\n        });\n      }\n    }, {\n      key: \"handleErrors\",\n      value: function handleErrors() {\n        this.progressBarShow = false;\n        this.enableUploadBtn = false;\n        this.uploadMsg = true;\n        this.afterUpload = true;\n        this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\n        this.uploadMsgClass = 'text-danger lead';\n      }\n    }, {\n      key: \"removeFile\",\n      value: function removeFile(i, sf_na) {\n        if (sf_na === 'sf') {\n          this.allowedFiles.splice(i, 1);\n          this.Caption.splice(i, 1);\n        } else {\n          this.notAllowedFiles.splice(i, 1);\n        }\n        if (this.allowedFiles.length === 0) {\n          this.enableUploadBtn = false;\n        }\n      }\n    }, {\n      key: \"convertSize\",\n      value: function convertSize(fileSize) {\n        return fileSize < 1024000 ? (fileSize / 1024).toFixed(2) + ' KB' : (fileSize / 1024000).toFixed(2) + ' MB';\n      }\n    }, {\n      key: \"attachpinOnclick\",\n      value: function attachpinOnclick() {\n        var element = document.getElementById('sel' + this.id);\n        if (element !== null) {\n          element.click();\n        }\n      }\n    }, {\n      key: \"drop\",\n      value: function drop(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.onChange(event);\n      }\n    }, {\n      key: \"allowDrop\",\n      value: function allowDrop(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n      }\n    }]);\n    return AngularFileUploaderComponent;\n  }();\n  AngularFileUploaderComponent.ɵfac = function AngularFileUploaderComponent_Factory(t) {\n    return new (t || AngularFileUploaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient, 4));\n  };\n  AngularFileUploaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AngularFileUploaderComponent,\n    selectors: [[\"angular-file-uploader\"]],\n    inputs: {\n      resetUpload: \"resetUpload\",\n      config: \"config\"\n    },\n    outputs: {\n      ApiResponse: \"ApiResponse\",\n      fileSelected: \"fileSelected\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"container\", \"id\", \"default\", 4, \"ngIf\"], [\"id\", \"attachPin\", 4, \"ngIf\"], [\"id\", \"default\", 1, \"container\"], [\"id\", \"dragNDrop\", \"class\", \"dragNDrop\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"btn btn-primary btn-sm afu-select-btn\", 3, \"for\", \"ngClass\", 4, \"ngIf\"], [\"type\", \"file\", \"style\", \"display: none\", \"title\", \"Select file\", \"name\", \"files[]\", 3, \"id\", \"disabled\", \"accept\", \"change\", 4, \"ngIf\"], [\"class\", \"btn btn-info btn-sm resetBtn afu-reset-btn\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"constraints-info\", \"afu-constraints-info\"], [\"class\", \"row afu-valid-file\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row text-danger afu-invalid-file\", 4, \"ngFor\", \"ngForOf\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"btn btn-success afu-upload-btn\", \"type\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"id\", \"dragNDrop\", 1, \"dragNDrop\", 3, \"ngClass\"], [2, \"position\", \"relative\"], [\"id\", \"div1\", 1, \"div1\", \"afu-dragndrop-box\", 3, \"drop\", \"dragover\"], [1, \"afu-dragndrop-text\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"afu-select-btn\", 3, \"for\", \"ngClass\"], [\"type\", \"file\", \"title\", \"Select file\", \"name\", \"files[]\", 2, \"display\", \"none\", 3, \"id\", \"disabled\", \"accept\", \"change\"], [1, \"btn\", \"btn-info\", \"btn-sm\", \"resetBtn\", \"afu-reset-btn\", 3, \"disabled\", \"click\"], [1, \"row\", \"afu-valid-file\"], [1, \"col-xs-3\", \"textOverflow\"], [1, \"text-primary\"], [1, \"col-xs-3\", \"padMarg\", \"sizeC\"], [\"class\", \"progress col-xs-3 padMarg afu-progress-bar\", 4, \"ngIf\"], [\"class\", \"col-xs-1\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"progress\", \"col-xs-3\", \"padMarg\", \"afu-progress-bar\"], [\"role\", \"progressbar\", 1, \"progress-bar\", \"progress-bar-success\", 3, \"ngStyle\"], [\"role\", \"button\", 1, \"col-xs-1\", 3, \"click\"], [1, \"fa\", \"fa-times\"], [1, \"row\", \"text-danger\", \"afu-invalid-file\"], [1, \"col-xs-3\"], [\"class\", \"col-xs-1 delFileIcon\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"button\", 1, \"col-xs-1\", \"delFileIcon\", 3, \"click\"], [1, \"progress\", \"col-xs-4\", \"padMarg\", \"afu-progress-bar\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"afu-upload-btn\", 3, \"disabled\", \"click\"], [\"id\", \"attachPin\"], [2, \"position\", \"relative\", \"padding-left\", \"6px\"], [1, \"btn\", \"up_btn\", \"afu-attach-pin\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-paperclip\"], [\"type\", \"file\", \"title\", \"Select file\", \"name\", \"files[]\", 2, \"display\", \"none\", 3, \"id\", \"accept\", \"change\"], [1, \"label\", \"label-info\", 3, \"id\"]],\n    template: function AngularFileUploaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, AngularFileUploaderComponent_div_0_Template, 15, 13, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_1_Template, 10, 6, \"div\", 1);\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme !== \"attachPin\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme == \"attachPin\");\n      }\n    },\n    dependencies: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgStyle],\n    styles: [\".constraints-info[_ngcontent-%COMP%]{font-style:italic;margin-top:10px}.padMarg[_ngcontent-%COMP%]{margin-bottom:0;padding:0}.caption[_ngcontent-%COMP%]{margin-right:5px}.textOverflow[_ngcontent-%COMP%]{overflow:hidden;padding-right:0;text-overflow:ellipsis;white-space:nowrap}.up_btn[_ngcontent-%COMP%]{background-color:transparent;border:2px solid #5c5b5b;border-radius:22px;color:#000}.delFileIcon[_ngcontent-%COMP%]{color:#ce0909;text-decoration:none}.selectBtnDisabled[_ngcontent-%COMP%]{background-color:#ccc;border:1px solid #999;color:#666;cursor:no-drop}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%]{border:2px dashed #5c5b5b;display:border-box;height:6rem;width:20rem}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{color:#5c5b5b;font-weight:700;margin-top:1.4em;text-align:center}.dragNDropBtmPad[_ngcontent-%COMP%]{padding-bottom:2rem}@media screen and (max-width:620px){.caption[_ngcontent-%COMP%]{padding:0}}@media screen and (max-width:510px){.sizeC[_ngcontent-%COMP%]{width:25%}}@media screen and (max-width:260px){.caption[_ngcontent-%COMP%], .sizeC[_ngcontent-%COMP%]{font-size:10px}}.resetBtn[_ngcontent-%COMP%]{margin-left:3px}\"]\n  });\n  return AngularFileUploaderComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar AngularFileUploaderModule = /*#__PURE__*/(function () {\n  var AngularFileUploaderModule = /*#__PURE__*/_createClass(function AngularFileUploaderModule() {\n    _classCallCheck(this, AngularFileUploaderModule);\n  });\n  AngularFileUploaderModule.ɵfac = function AngularFileUploaderModule_Factory(t) {\n    return new (t || AngularFileUploaderModule)();\n  };\n  AngularFileUploaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: AngularFileUploaderModule\n  });\n  AngularFileUploaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, HttpClientModule]\n  });\n  return AngularFileUploaderModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularFileUploaderModule, {\n    declarations: function declarations() {\n      return [AngularFileUploaderComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, HttpClientModule];\n    },\n    exports: function exports() {\n      return [AngularFileUploaderComponent];\n    }\n  });\n})();\n\n/*\r\n * Public API Surface of angular-file-uploader\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AngularFileUploaderComponent, AngularFileUploaderModule };\n\n//# sourceMappingURL=angular-file-uploader.js.map","map":null,"metadata":{},"sourceType":"module"}